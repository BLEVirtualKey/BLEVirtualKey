REM Notes:
REM This script will not work with obfuscated apk because repackaging will not get the same files.
REM  - APK_TMP_PATH must be a directory where TEEClient.zip is unzipped inside
REM  - androiddebugkey must be a local key generated by the command: keytool -genkey -v -keystore %KEY_STORE% -storepass android -alias androiddebugkey -keypass android -dname "CN=Android Debug,O=Android,C=US"

echo "tampering app-release.apk"
rem set SDK_TOOLS_PATH=%USERPROFILE%\AppData\Local\Android\sdk\tools
set KEY_STORE=my-release-key.keystore
set APK_PATH=%cd%
set JDK_PATH="C:\tools\Java\JAVA_HOME\bin"
rem set ZIP="C:\tools\7-Zip\7z.exe"
set ZIP=zip
set ZIPLINE="C:\tools\Android\sdk\build-tools\23.0.3\zipalign.exe"
set TAMPER_PATH=%APK_PATH%\tampered
set TMP_PATH=%APK_PATH%\tmp
set APK_NAME=app-release

if not exist %TAMPER_PATH% mkdir %TAMPER_PATH%
if not exist %TMP_PATH% mkdir %TMP_PATH%


if exist %APK_PATH%\%APK_NAME%.zip del %APK_PATH%\%APK_NAME%.zip



%ZIP% x "%APK_PATH%\%APK_NAME%.apk" -o%TMP_PATH% -y
rmdir /S /Q %TMP_PATH%\assets\taConf rem tamper with asset
rmdir /S /Q %TMP_PATH%\META-INF rem remove cert


%ZIP% a -r "%APK_PATH%\%APK_NAME%.zip" %TMP_PATH%\*.*

rem keytool -genkey -v -keystore %KEY_STORE% -storepass android -alias androiddebugkey -keypass android -dname "CN=Android Debug,O=Android,C=US"
%JDK_PATH%\jarsigner -verbose -keystore %KEY_STORE% "%APK_PATH%\%APK_NAME%.zip" androiddebugkey -storepass android -sigalg SHA1withDSA

REM -sigalg SHA1withRSA -digestalg SHA1
if exist "%TAMPER_PATH%\%APK_NAME%.apk" del "%TAMPER_PATH%\%APK_NAME%.apk"
%ZIPLINE% -v 4 %APK_PATH%\%APK_NAME%.zip "%TAMPER_PATH%\%APK_NAME%.apk"

:ENDBATCH
echo Done.