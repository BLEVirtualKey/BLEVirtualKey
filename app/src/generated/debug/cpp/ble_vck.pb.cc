// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ble_vck.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ble_vck.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MsgAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgTop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgTop_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgHead_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgHead_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAuthentication_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAuthentication_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgVehicleCtrlReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgVehicleCtrlReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* GenericState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumMsgType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ble_5fvck_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ble_5fvck_2eproto() {
  protobuf_AddDesc_ble_5fvck_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ble_vck.proto");
  GOOGLE_CHECK(file != NULL);
  MsgAck_descriptor_ = file->message_type(0);
  static const int MsgAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAck, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAck, code_),
  };
  MsgAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgAck_descriptor_,
      MsgAck::internal_default_instance(),
      MsgAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAck, _internal_metadata_));
  MsgTop_descriptor_ = file->message_type(1);
  static const int MsgTop_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTop, msg_head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTop, ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTop, auth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTop, vehicle_ctrl_),
  };
  MsgTop_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgTop_descriptor_,
      MsgTop::internal_default_instance(),
      MsgTop_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgTop),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTop, _internal_metadata_));
  MsgHead_descriptor_ = file->message_type(2);
  static const int MsgHead_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, message_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, msg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, msg_c_time_),
  };
  MsgHead_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgHead_descriptor_,
      MsgHead::internal_default_instance(),
      MsgHead_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgHead),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, _internal_metadata_));
  MsgAuthentication_descriptor_ = file->message_type(3);
  static const int MsgAuthentication_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthentication, se_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthentication, tee_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthentication, c_rnd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthentication, t_rnd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthentication, kicc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthentication, kifd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthentication, sk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthentication, ssc_),
  };
  MsgAuthentication_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgAuthentication_descriptor_,
      MsgAuthentication::internal_default_instance(),
      MsgAuthentication_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgAuthentication),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAuthentication, _internal_metadata_));
  MsgVehicleCtrlReq_descriptor_ = file->message_type(4);
  static const int MsgVehicleCtrlReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVehicleCtrlReq, ac_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVehicleCtrlReq, trunk_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVehicleCtrlReq, engine_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVehicleCtrlReq, door_lock_status_),
  };
  MsgVehicleCtrlReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgVehicleCtrlReq_descriptor_,
      MsgVehicleCtrlReq::internal_default_instance(),
      MsgVehicleCtrlReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgVehicleCtrlReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgVehicleCtrlReq, _internal_metadata_));
  GenericState_descriptor_ = file->enum_type(0);
  EnumMsgType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ble_5fvck_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgAck_descriptor_, MsgAck::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgTop_descriptor_, MsgTop::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgHead_descriptor_, MsgHead::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgAuthentication_descriptor_, MsgAuthentication::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgVehicleCtrlReq_descriptor_, MsgVehicleCtrlReq::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ble_5fvck_2eproto() {
  MsgAck_default_instance_.Shutdown();
  delete MsgAck_reflection_;
  MsgTop_default_instance_.Shutdown();
  delete MsgTop_reflection_;
  MsgHead_default_instance_.Shutdown();
  delete MsgHead_reflection_;
  MsgAuthentication_default_instance_.Shutdown();
  delete MsgAuthentication_reflection_;
  MsgVehicleCtrlReq_default_instance_.Shutdown();
  delete MsgVehicleCtrlReq_reflection_;
}

void protobuf_InitDefaults_ble_5fvck_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  MsgAck_default_instance_.DefaultConstruct();
  MsgTop_default_instance_.DefaultConstruct();
  MsgHead_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MsgAuthentication_default_instance_.DefaultConstruct();
  MsgVehicleCtrlReq_default_instance_.DefaultConstruct();
  MsgAck_default_instance_.get_mutable()->InitAsDefaultInstance();
  MsgTop_default_instance_.get_mutable()->InitAsDefaultInstance();
  MsgHead_default_instance_.get_mutable()->InitAsDefaultInstance();
  MsgAuthentication_default_instance_.get_mutable()->InitAsDefaultInstance();
  MsgVehicleCtrlReq_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_ble_5fvck_2eproto_once_);
void protobuf_InitDefaults_ble_5fvck_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_ble_5fvck_2eproto_once_,
                 &protobuf_InitDefaults_ble_5fvck_2eproto_impl);
}
void protobuf_AddDesc_ble_5fvck_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_ble_5fvck_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rble_vck.proto\"&\n\006MsgAck\022\016\n\006status\030\001 \001("
    "\010\022\014\n\004code\030\002 \001(\t\"\206\001\n\006MsgTop\022\032\n\010msg_head\030\001"
    " \001(\0132\010.MsgHead\022\024\n\003ack\030\002 \001(\0132\007.MsgAck\022 \n\004"
    "auth\030\003 \001(\0132\022.MsgAuthentication\022(\n\014vehicl"
    "e_ctrl\030\004 \001(\0132\022.MsgVehicleCtrlReq\"Q\n\007MsgH"
    "ead\022\022\n\nmessage_id\030\001 \001(\r\022\036\n\010msg_type\030\002 \001("
    "\0162\014.EnumMsgType\022\022\n\nmsg_c_time\030\003 \001(\r\"\205\001\n\021"
    "MsgAuthentication\022\r\n\005se_id\030\001 \001(\t\022\016\n\006tee_"
    "id\030\002 \001(\005\022\r\n\005c_rnd\030\004 \001(\005\022\r\n\005t_rnd\030\003 \001(\005\022\014"
    "\n\004kicc\030\005 \001(\005\022\014\n\004kifd\030\006 \001(\005\022\n\n\002sk\030\007 \001(\005\022\013"
    "\n\003ssc\030\010 \001(\005\"\251\001\n\021MsgVehicleCtrlReq\022 \n\tac_"
    "status\030\001 \001(\0162\r.GenericState\022#\n\014trunk_sta"
    "tus\030\002 \001(\0162\r.GenericState\022$\n\rengine_statu"
    "s\030\003 \001(\0162\r.GenericState\022\'\n\020door_lock_stat"
    "us\030\004 \001(\0162\r.GenericState*\?\n\014GenericState\022"
    "\r\n\tSTATE_OFF\020\000\022\014\n\010STATE_ON\020\001\022\022\n\rSTATE_UN"
    "KNOWN\020\377\001*\216\002\n\013EnumMsgType\022\t\n\005TYPE0\020\000\022\t\n\005T"
    "YPE1\020\001\022\007\n\003ACK\020\002\022\014\n\010SEID_REQ\020\003\022\r\n\tSEID_RE"
    "SP\020\004\022\014\n\010AUTH_REQ\020\005\022\r\n\tAUTH_RESP\020\006\022\017\n\013AC_"
    "CTRL_REQ\020\007\022\020\n\014AC_CTRL_RESP\020\010\022\022\n\016TRUNK_CT"
    "RL_REQ\020\t\022\023\n\017TRUNK_CTRL_RESP\020\n\022\023\n\017ENGINE_"
    "CTRL_REQ\020\013\022\024\n\020ENGINE_CTRL_RESP\020\014\022\026\n\022DOOR"
    "_LOCK_CTRL_REQ\020\r\022\027\n\023DOOR_LOCK_CTRL_RESP\020"
    "\016B$\n\022net.angrycode.beanB\016BleVckProtocolb"
    "\006proto3", 967);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ble_vck.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ble_5fvck_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ble_5fvck_2eproto_once_);
void protobuf_AddDesc_ble_5fvck_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ble_5fvck_2eproto_once_,
                 &protobuf_AddDesc_ble_5fvck_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ble_5fvck_2eproto {
  StaticDescriptorInitializer_ble_5fvck_2eproto() {
    protobuf_AddDesc_ble_5fvck_2eproto();
  }
} static_descriptor_initializer_ble_5fvck_2eproto_;
const ::google::protobuf::EnumDescriptor* GenericState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GenericState_descriptor_;
}
bool GenericState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 255:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnumMsgType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumMsgType_descriptor_;
}
bool EnumMsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgAck::kStatusFieldNumber;
const int MsgAck::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgAck::MsgAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ble_5fvck_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgAck)
}

void MsgAck::InitAsDefaultInstance() {
}

MsgAck::MsgAck(const MsgAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgAck)
}

void MsgAck::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = false;
  _cached_size_ = 0;
}

MsgAck::~MsgAck() {
  // @@protoc_insertion_point(destructor:MsgAck)
  SharedDtor();
}

void MsgAck::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAck_descriptor_;
}

const MsgAck& MsgAck::default_instance() {
  protobuf_InitDefaults_ble_5fvck_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MsgAck> MsgAck_default_instance_;

MsgAck* MsgAck::New(::google::protobuf::Arena* arena) const {
  MsgAck* n = new MsgAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgAck::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgAck)
  status_ = false;
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MsgAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool status = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_code;
        break;
      }

      // optional string code = 2;
      case 2: {
        if (tag == 18) {
         parse_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MsgAck.code"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgAck)
  return false;
#undef DO_
}

void MsgAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgAck)
  // optional bool status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->status(), output);
  }

  // optional string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgAck.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  // @@protoc_insertion_point(serialize_end:MsgAck)
}

::google::protobuf::uint8* MsgAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgAck)
  // optional bool status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->status(), target);
  }

  // optional string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgAck.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MsgAck)
  return target;
}

size_t MsgAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgAck)
  size_t total_size = 0;

  // optional bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  // optional string code = 2;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgAck)
    UnsafeMergeFrom(*source);
  }
}

void MsgAck::MergeFrom(const MsgAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgAck)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MsgAck::UnsafeMergeFrom(const MsgAck& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
}

void MsgAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAck::CopyFrom(const MsgAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgAck)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MsgAck::IsInitialized() const {

  return true;
}

void MsgAck::Swap(MsgAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgAck::InternalSwap(MsgAck* other) {
  std::swap(status_, other->status_);
  code_.Swap(&other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAck_descriptor_;
  metadata.reflection = MsgAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgAck

// optional bool status = 1;
void MsgAck::clear_status() {
  status_ = false;
}
bool MsgAck::status() const {
  // @@protoc_insertion_point(field_get:MsgAck.status)
  return status_;
}
void MsgAck::set_status(bool value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:MsgAck.status)
}

// optional string code = 2;
void MsgAck::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgAck::code() const {
  // @@protoc_insertion_point(field_get:MsgAck.code)
  return code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgAck::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgAck.code)
}
void MsgAck::set_code(const char* value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgAck.code)
}
void MsgAck::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgAck.code)
}
::std::string* MsgAck::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:MsgAck.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgAck::release_code() {
  // @@protoc_insertion_point(field_release:MsgAck.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgAck::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:MsgAck.code)
}

inline const MsgAck* MsgAck::internal_default_instance() {
  return &MsgAck_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgTop::kMsgHeadFieldNumber;
const int MsgTop::kAckFieldNumber;
const int MsgTop::kAuthFieldNumber;
const int MsgTop::kVehicleCtrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgTop::MsgTop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ble_5fvck_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgTop)
}

void MsgTop::InitAsDefaultInstance() {
  msg_head_ = const_cast< ::MsgHead*>(
      ::MsgHead::internal_default_instance());
  ack_ = const_cast< ::MsgAck*>(
      ::MsgAck::internal_default_instance());
  auth_ = const_cast< ::MsgAuthentication*>(
      ::MsgAuthentication::internal_default_instance());
  vehicle_ctrl_ = const_cast< ::MsgVehicleCtrlReq*>(
      ::MsgVehicleCtrlReq::internal_default_instance());
}

MsgTop::MsgTop(const MsgTop& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgTop)
}

void MsgTop::SharedCtor() {
  msg_head_ = NULL;
  ack_ = NULL;
  auth_ = NULL;
  vehicle_ctrl_ = NULL;
  _cached_size_ = 0;
}

MsgTop::~MsgTop() {
  // @@protoc_insertion_point(destructor:MsgTop)
  SharedDtor();
}

void MsgTop::SharedDtor() {
  if (this != &MsgTop_default_instance_.get()) {
    delete msg_head_;
    delete ack_;
    delete auth_;
    delete vehicle_ctrl_;
  }
}

void MsgTop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgTop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgTop_descriptor_;
}

const MsgTop& MsgTop::default_instance() {
  protobuf_InitDefaults_ble_5fvck_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MsgTop> MsgTop_default_instance_;

MsgTop* MsgTop::New(::google::protobuf::Arena* arena) const {
  MsgTop* n = new MsgTop;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgTop::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgTop)
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
  if (GetArenaNoVirtual() == NULL && ack_ != NULL) delete ack_;
  ack_ = NULL;
  if (GetArenaNoVirtual() == NULL && auth_ != NULL) delete auth_;
  auth_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehicle_ctrl_ != NULL) delete vehicle_ctrl_;
  vehicle_ctrl_ = NULL;
}

bool MsgTop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgTop)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgHead msg_head = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ack;
        break;
      }

      // optional .MsgAck ack = 2;
      case 2: {
        if (tag == 18) {
         parse_ack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ack()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_auth;
        break;
      }

      // optional .MsgAuthentication auth = 3;
      case 3: {
        if (tag == 26) {
         parse_auth:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_vehicle_ctrl;
        break;
      }

      // optional .MsgVehicleCtrlReq vehicle_ctrl = 4;
      case 4: {
        if (tag == 34) {
         parse_vehicle_ctrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vehicle_ctrl()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgTop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgTop)
  return false;
#undef DO_
}

void MsgTop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgTop)
  // optional .MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // optional .MsgAck ack = 2;
  if (this->has_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->ack_, output);
  }

  // optional .MsgAuthentication auth = 3;
  if (this->has_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->auth_, output);
  }

  // optional .MsgVehicleCtrlReq vehicle_ctrl = 4;
  if (this->has_vehicle_ctrl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->vehicle_ctrl_, output);
  }

  // @@protoc_insertion_point(serialize_end:MsgTop)
}

::google::protobuf::uint8* MsgTop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgTop)
  // optional .MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, false, target);
  }

  // optional .MsgAck ack = 2;
  if (this->has_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->ack_, false, target);
  }

  // optional .MsgAuthentication auth = 3;
  if (this->has_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->auth_, false, target);
  }

  // optional .MsgVehicleCtrlReq vehicle_ctrl = 4;
  if (this->has_vehicle_ctrl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->vehicle_ctrl_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MsgTop)
  return target;
}

size_t MsgTop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgTop)
  size_t total_size = 0;

  // optional .MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  // optional .MsgAck ack = 2;
  if (this->has_ack()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ack_);
  }

  // optional .MsgAuthentication auth = 3;
  if (this->has_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->auth_);
  }

  // optional .MsgVehicleCtrlReq vehicle_ctrl = 4;
  if (this->has_vehicle_ctrl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->vehicle_ctrl_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgTop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgTop)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgTop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgTop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgTop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgTop)
    UnsafeMergeFrom(*source);
  }
}

void MsgTop::MergeFrom(const MsgTop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgTop)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MsgTop::UnsafeMergeFrom(const MsgTop& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_msg_head()) {
    mutable_msg_head()->::MsgHead::MergeFrom(from.msg_head());
  }
  if (from.has_ack()) {
    mutable_ack()->::MsgAck::MergeFrom(from.ack());
  }
  if (from.has_auth()) {
    mutable_auth()->::MsgAuthentication::MergeFrom(from.auth());
  }
  if (from.has_vehicle_ctrl()) {
    mutable_vehicle_ctrl()->::MsgVehicleCtrlReq::MergeFrom(from.vehicle_ctrl());
  }
}

void MsgTop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgTop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTop::CopyFrom(const MsgTop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgTop)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MsgTop::IsInitialized() const {

  return true;
}

void MsgTop::Swap(MsgTop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgTop::InternalSwap(MsgTop* other) {
  std::swap(msg_head_, other->msg_head_);
  std::swap(ack_, other->ack_);
  std::swap(auth_, other->auth_);
  std::swap(vehicle_ctrl_, other->vehicle_ctrl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgTop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgTop_descriptor_;
  metadata.reflection = MsgTop_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgTop

// optional .MsgHead msg_head = 1;
bool MsgTop::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void MsgTop::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::MsgHead& MsgTop::msg_head() const {
  // @@protoc_insertion_point(field_get:MsgTop.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::MsgHead::internal_default_instance();
}
::MsgHead* MsgTop::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:MsgTop.msg_head)
  return msg_head_;
}
::MsgHead* MsgTop::release_msg_head() {
  // @@protoc_insertion_point(field_release:MsgTop.msg_head)
  
  ::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void MsgTop::set_allocated_msg_head(::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MsgTop.msg_head)
}

// optional .MsgAck ack = 2;
bool MsgTop::has_ack() const {
  return this != internal_default_instance() && ack_ != NULL;
}
void MsgTop::clear_ack() {
  if (GetArenaNoVirtual() == NULL && ack_ != NULL) delete ack_;
  ack_ = NULL;
}
const ::MsgAck& MsgTop::ack() const {
  // @@protoc_insertion_point(field_get:MsgTop.ack)
  return ack_ != NULL ? *ack_
                         : *::MsgAck::internal_default_instance();
}
::MsgAck* MsgTop::mutable_ack() {
  
  if (ack_ == NULL) {
    ack_ = new ::MsgAck;
  }
  // @@protoc_insertion_point(field_mutable:MsgTop.ack)
  return ack_;
}
::MsgAck* MsgTop::release_ack() {
  // @@protoc_insertion_point(field_release:MsgTop.ack)
  
  ::MsgAck* temp = ack_;
  ack_ = NULL;
  return temp;
}
void MsgTop::set_allocated_ack(::MsgAck* ack) {
  delete ack_;
  ack_ = ack;
  if (ack) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MsgTop.ack)
}

// optional .MsgAuthentication auth = 3;
bool MsgTop::has_auth() const {
  return this != internal_default_instance() && auth_ != NULL;
}
void MsgTop::clear_auth() {
  if (GetArenaNoVirtual() == NULL && auth_ != NULL) delete auth_;
  auth_ = NULL;
}
const ::MsgAuthentication& MsgTop::auth() const {
  // @@protoc_insertion_point(field_get:MsgTop.auth)
  return auth_ != NULL ? *auth_
                         : *::MsgAuthentication::internal_default_instance();
}
::MsgAuthentication* MsgTop::mutable_auth() {
  
  if (auth_ == NULL) {
    auth_ = new ::MsgAuthentication;
  }
  // @@protoc_insertion_point(field_mutable:MsgTop.auth)
  return auth_;
}
::MsgAuthentication* MsgTop::release_auth() {
  // @@protoc_insertion_point(field_release:MsgTop.auth)
  
  ::MsgAuthentication* temp = auth_;
  auth_ = NULL;
  return temp;
}
void MsgTop::set_allocated_auth(::MsgAuthentication* auth) {
  delete auth_;
  auth_ = auth;
  if (auth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MsgTop.auth)
}

// optional .MsgVehicleCtrlReq vehicle_ctrl = 4;
bool MsgTop::has_vehicle_ctrl() const {
  return this != internal_default_instance() && vehicle_ctrl_ != NULL;
}
void MsgTop::clear_vehicle_ctrl() {
  if (GetArenaNoVirtual() == NULL && vehicle_ctrl_ != NULL) delete vehicle_ctrl_;
  vehicle_ctrl_ = NULL;
}
const ::MsgVehicleCtrlReq& MsgTop::vehicle_ctrl() const {
  // @@protoc_insertion_point(field_get:MsgTop.vehicle_ctrl)
  return vehicle_ctrl_ != NULL ? *vehicle_ctrl_
                         : *::MsgVehicleCtrlReq::internal_default_instance();
}
::MsgVehicleCtrlReq* MsgTop::mutable_vehicle_ctrl() {
  
  if (vehicle_ctrl_ == NULL) {
    vehicle_ctrl_ = new ::MsgVehicleCtrlReq;
  }
  // @@protoc_insertion_point(field_mutable:MsgTop.vehicle_ctrl)
  return vehicle_ctrl_;
}
::MsgVehicleCtrlReq* MsgTop::release_vehicle_ctrl() {
  // @@protoc_insertion_point(field_release:MsgTop.vehicle_ctrl)
  
  ::MsgVehicleCtrlReq* temp = vehicle_ctrl_;
  vehicle_ctrl_ = NULL;
  return temp;
}
void MsgTop::set_allocated_vehicle_ctrl(::MsgVehicleCtrlReq* vehicle_ctrl) {
  delete vehicle_ctrl_;
  vehicle_ctrl_ = vehicle_ctrl;
  if (vehicle_ctrl) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MsgTop.vehicle_ctrl)
}

inline const MsgTop* MsgTop::internal_default_instance() {
  return &MsgTop_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgHead::kMessageIdFieldNumber;
const int MsgHead::kMsgTypeFieldNumber;
const int MsgHead::kMsgCTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgHead::MsgHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ble_5fvck_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgHead)
}

void MsgHead::InitAsDefaultInstance() {
}

MsgHead::MsgHead(const MsgHead& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgHead)
}

void MsgHead::SharedCtor() {
  ::memset(&message_id_, 0, reinterpret_cast<char*>(&msg_c_time_) -
    reinterpret_cast<char*>(&message_id_) + sizeof(msg_c_time_));
  _cached_size_ = 0;
}

MsgHead::~MsgHead() {
  // @@protoc_insertion_point(destructor:MsgHead)
  SharedDtor();
}

void MsgHead::SharedDtor() {
}

void MsgHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgHead::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHead_descriptor_;
}

const MsgHead& MsgHead::default_instance() {
  protobuf_InitDefaults_ble_5fvck_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MsgHead> MsgHead_default_instance_;

MsgHead* MsgHead::New(::google::protobuf::Arena* arena) const {
  MsgHead* n = new MsgHead;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgHead::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgHead)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MsgHead, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgHead*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(message_id_, msg_c_time_);

#undef ZR_HELPER_
#undef ZR_

}

bool MsgHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 message_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &message_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msg_type;
        break;
      }

      // optional .EnumMsgType msg_type = 2;
      case 2: {
        if (tag == 16) {
         parse_msg_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_type(static_cast< ::EnumMsgType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_msg_c_time;
        break;
      }

      // optional uint32 msg_c_time = 3;
      case 3: {
        if (tag == 24) {
         parse_msg_c_time:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_c_time_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgHead)
  return false;
#undef DO_
}

void MsgHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgHead)
  // optional uint32 message_id = 1;
  if (this->message_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->message_id(), output);
  }

  // optional .EnumMsgType msg_type = 2;
  if (this->msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msg_type(), output);
  }

  // optional uint32 msg_c_time = 3;
  if (this->msg_c_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msg_c_time(), output);
  }

  // @@protoc_insertion_point(serialize_end:MsgHead)
}

::google::protobuf::uint8* MsgHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgHead)
  // optional uint32 message_id = 1;
  if (this->message_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->message_id(), target);
  }

  // optional .EnumMsgType msg_type = 2;
  if (this->msg_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msg_type(), target);
  }

  // optional uint32 msg_c_time = 3;
  if (this->msg_c_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msg_c_time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MsgHead)
  return target;
}

size_t MsgHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgHead)
  size_t total_size = 0;

  // optional uint32 message_id = 1;
  if (this->message_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->message_id());
  }

  // optional .EnumMsgType msg_type = 2;
  if (this->msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());
  }

  // optional uint32 msg_c_time = 3;
  if (this->msg_c_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_c_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgHead)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgHead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgHead)
    UnsafeMergeFrom(*source);
  }
}

void MsgHead::MergeFrom(const MsgHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgHead)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MsgHead::UnsafeMergeFrom(const MsgHead& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.message_id() != 0) {
    set_message_id(from.message_id());
  }
  if (from.msg_type() != 0) {
    set_msg_type(from.msg_type());
  }
  if (from.msg_c_time() != 0) {
    set_msg_c_time(from.msg_c_time());
  }
}

void MsgHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHead::CopyFrom(const MsgHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgHead)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MsgHead::IsInitialized() const {

  return true;
}

void MsgHead::Swap(MsgHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgHead::InternalSwap(MsgHead* other) {
  std::swap(message_id_, other->message_id_);
  std::swap(msg_type_, other->msg_type_);
  std::swap(msg_c_time_, other->msg_c_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgHead::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgHead_descriptor_;
  metadata.reflection = MsgHead_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgHead

// optional uint32 message_id = 1;
void MsgHead::clear_message_id() {
  message_id_ = 0u;
}
::google::protobuf::uint32 MsgHead::message_id() const {
  // @@protoc_insertion_point(field_get:MsgHead.message_id)
  return message_id_;
}
void MsgHead::set_message_id(::google::protobuf::uint32 value) {
  
  message_id_ = value;
  // @@protoc_insertion_point(field_set:MsgHead.message_id)
}

// optional .EnumMsgType msg_type = 2;
void MsgHead::clear_msg_type() {
  msg_type_ = 0;
}
::EnumMsgType MsgHead::msg_type() const {
  // @@protoc_insertion_point(field_get:MsgHead.msg_type)
  return static_cast< ::EnumMsgType >(msg_type_);
}
void MsgHead::set_msg_type(::EnumMsgType value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:MsgHead.msg_type)
}

// optional uint32 msg_c_time = 3;
void MsgHead::clear_msg_c_time() {
  msg_c_time_ = 0u;
}
::google::protobuf::uint32 MsgHead::msg_c_time() const {
  // @@protoc_insertion_point(field_get:MsgHead.msg_c_time)
  return msg_c_time_;
}
void MsgHead::set_msg_c_time(::google::protobuf::uint32 value) {
  
  msg_c_time_ = value;
  // @@protoc_insertion_point(field_set:MsgHead.msg_c_time)
}

inline const MsgHead* MsgHead::internal_default_instance() {
  return &MsgHead_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgAuthentication::kSeIdFieldNumber;
const int MsgAuthentication::kTeeIdFieldNumber;
const int MsgAuthentication::kCRndFieldNumber;
const int MsgAuthentication::kTRndFieldNumber;
const int MsgAuthentication::kKiccFieldNumber;
const int MsgAuthentication::kKifdFieldNumber;
const int MsgAuthentication::kSkFieldNumber;
const int MsgAuthentication::kSscFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgAuthentication::MsgAuthentication()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ble_5fvck_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgAuthentication)
}

void MsgAuthentication::InitAsDefaultInstance() {
}

MsgAuthentication::MsgAuthentication(const MsgAuthentication& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgAuthentication)
}

void MsgAuthentication::SharedCtor() {
  se_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tee_id_, 0, reinterpret_cast<char*>(&ssc_) -
    reinterpret_cast<char*>(&tee_id_) + sizeof(ssc_));
  _cached_size_ = 0;
}

MsgAuthentication::~MsgAuthentication() {
  // @@protoc_insertion_point(destructor:MsgAuthentication)
  SharedDtor();
}

void MsgAuthentication::SharedDtor() {
  se_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgAuthentication::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgAuthentication::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAuthentication_descriptor_;
}

const MsgAuthentication& MsgAuthentication::default_instance() {
  protobuf_InitDefaults_ble_5fvck_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MsgAuthentication> MsgAuthentication_default_instance_;

MsgAuthentication* MsgAuthentication::New(::google::protobuf::Arena* arena) const {
  MsgAuthentication* n = new MsgAuthentication;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgAuthentication::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgAuthentication)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MsgAuthentication, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgAuthentication*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(tee_id_, ssc_);
  se_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MsgAuthentication::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgAuthentication)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string se_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_se_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->se_id().data(), this->se_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MsgAuthentication.se_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tee_id;
        break;
      }

      // optional int32 tee_id = 2;
      case 2: {
        if (tag == 16) {
         parse_tee_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tee_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_t_rnd;
        break;
      }

      // optional int32 t_rnd = 3;
      case 3: {
        if (tag == 24) {
         parse_t_rnd:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &t_rnd_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_c_rnd;
        break;
      }

      // optional int32 c_rnd = 4;
      case 4: {
        if (tag == 32) {
         parse_c_rnd:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c_rnd_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_kicc;
        break;
      }

      // optional int32 kicc = 5;
      case 5: {
        if (tag == 40) {
         parse_kicc:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kicc_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_kifd;
        break;
      }

      // optional int32 kifd = 6;
      case 6: {
        if (tag == 48) {
         parse_kifd:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kifd_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_sk;
        break;
      }

      // optional int32 sk = 7;
      case 7: {
        if (tag == 56) {
         parse_sk:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sk_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_ssc;
        break;
      }

      // optional int32 ssc = 8;
      case 8: {
        if (tag == 64) {
         parse_ssc:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ssc_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgAuthentication)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgAuthentication)
  return false;
#undef DO_
}

void MsgAuthentication::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgAuthentication)
  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->se_id().data(), this->se_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgAuthentication.se_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->se_id(), output);
  }

  // optional int32 tee_id = 2;
  if (this->tee_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tee_id(), output);
  }

  // optional int32 t_rnd = 3;
  if (this->t_rnd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->t_rnd(), output);
  }

  // optional int32 c_rnd = 4;
  if (this->c_rnd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->c_rnd(), output);
  }

  // optional int32 kicc = 5;
  if (this->kicc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->kicc(), output);
  }

  // optional int32 kifd = 6;
  if (this->kifd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->kifd(), output);
  }

  // optional int32 sk = 7;
  if (this->sk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->sk(), output);
  }

  // optional int32 ssc = 8;
  if (this->ssc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->ssc(), output);
  }

  // @@protoc_insertion_point(serialize_end:MsgAuthentication)
}

::google::protobuf::uint8* MsgAuthentication::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgAuthentication)
  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->se_id().data(), this->se_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgAuthentication.se_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->se_id(), target);
  }

  // optional int32 tee_id = 2;
  if (this->tee_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->tee_id(), target);
  }

  // optional int32 t_rnd = 3;
  if (this->t_rnd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->t_rnd(), target);
  }

  // optional int32 c_rnd = 4;
  if (this->c_rnd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->c_rnd(), target);
  }

  // optional int32 kicc = 5;
  if (this->kicc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->kicc(), target);
  }

  // optional int32 kifd = 6;
  if (this->kifd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->kifd(), target);
  }

  // optional int32 sk = 7;
  if (this->sk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->sk(), target);
  }

  // optional int32 ssc = 8;
  if (this->ssc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->ssc(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MsgAuthentication)
  return target;
}

size_t MsgAuthentication::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgAuthentication)
  size_t total_size = 0;

  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->se_id());
  }

  // optional int32 tee_id = 2;
  if (this->tee_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tee_id());
  }

  // optional int32 c_rnd = 4;
  if (this->c_rnd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c_rnd());
  }

  // optional int32 t_rnd = 3;
  if (this->t_rnd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->t_rnd());
  }

  // optional int32 kicc = 5;
  if (this->kicc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kicc());
  }

  // optional int32 kifd = 6;
  if (this->kifd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kifd());
  }

  // optional int32 sk = 7;
  if (this->sk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sk());
  }

  // optional int32 ssc = 8;
  if (this->ssc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ssc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgAuthentication::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgAuthentication)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgAuthentication* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgAuthentication>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgAuthentication)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgAuthentication)
    UnsafeMergeFrom(*source);
  }
}

void MsgAuthentication::MergeFrom(const MsgAuthentication& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgAuthentication)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MsgAuthentication::UnsafeMergeFrom(const MsgAuthentication& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.se_id().size() > 0) {

    se_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.se_id_);
  }
  if (from.tee_id() != 0) {
    set_tee_id(from.tee_id());
  }
  if (from.c_rnd() != 0) {
    set_c_rnd(from.c_rnd());
  }
  if (from.t_rnd() != 0) {
    set_t_rnd(from.t_rnd());
  }
  if (from.kicc() != 0) {
    set_kicc(from.kicc());
  }
  if (from.kifd() != 0) {
    set_kifd(from.kifd());
  }
  if (from.sk() != 0) {
    set_sk(from.sk());
  }
  if (from.ssc() != 0) {
    set_ssc(from.ssc());
  }
}

void MsgAuthentication::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgAuthentication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAuthentication::CopyFrom(const MsgAuthentication& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgAuthentication)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MsgAuthentication::IsInitialized() const {

  return true;
}

void MsgAuthentication::Swap(MsgAuthentication* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgAuthentication::InternalSwap(MsgAuthentication* other) {
  se_id_.Swap(&other->se_id_);
  std::swap(tee_id_, other->tee_id_);
  std::swap(c_rnd_, other->c_rnd_);
  std::swap(t_rnd_, other->t_rnd_);
  std::swap(kicc_, other->kicc_);
  std::swap(kifd_, other->kifd_);
  std::swap(sk_, other->sk_);
  std::swap(ssc_, other->ssc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgAuthentication::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAuthentication_descriptor_;
  metadata.reflection = MsgAuthentication_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgAuthentication

// optional string se_id = 1;
void MsgAuthentication::clear_se_id() {
  se_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgAuthentication::se_id() const {
  // @@protoc_insertion_point(field_get:MsgAuthentication.se_id)
  return se_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgAuthentication::set_se_id(const ::std::string& value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgAuthentication.se_id)
}
void MsgAuthentication::set_se_id(const char* value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgAuthentication.se_id)
}
void MsgAuthentication::set_se_id(const char* value, size_t size) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgAuthentication.se_id)
}
::std::string* MsgAuthentication::mutable_se_id() {
  
  // @@protoc_insertion_point(field_mutable:MsgAuthentication.se_id)
  return se_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgAuthentication::release_se_id() {
  // @@protoc_insertion_point(field_release:MsgAuthentication.se_id)
  
  return se_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgAuthentication::set_allocated_se_id(::std::string* se_id) {
  if (se_id != NULL) {
    
  } else {
    
  }
  se_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), se_id);
  // @@protoc_insertion_point(field_set_allocated:MsgAuthentication.se_id)
}

// optional int32 tee_id = 2;
void MsgAuthentication::clear_tee_id() {
  tee_id_ = 0;
}
::google::protobuf::int32 MsgAuthentication::tee_id() const {
  // @@protoc_insertion_point(field_get:MsgAuthentication.tee_id)
  return tee_id_;
}
void MsgAuthentication::set_tee_id(::google::protobuf::int32 value) {
  
  tee_id_ = value;
  // @@protoc_insertion_point(field_set:MsgAuthentication.tee_id)
}

// optional int32 c_rnd = 4;
void MsgAuthentication::clear_c_rnd() {
  c_rnd_ = 0;
}
::google::protobuf::int32 MsgAuthentication::c_rnd() const {
  // @@protoc_insertion_point(field_get:MsgAuthentication.c_rnd)
  return c_rnd_;
}
void MsgAuthentication::set_c_rnd(::google::protobuf::int32 value) {
  
  c_rnd_ = value;
  // @@protoc_insertion_point(field_set:MsgAuthentication.c_rnd)
}

// optional int32 t_rnd = 3;
void MsgAuthentication::clear_t_rnd() {
  t_rnd_ = 0;
}
::google::protobuf::int32 MsgAuthentication::t_rnd() const {
  // @@protoc_insertion_point(field_get:MsgAuthentication.t_rnd)
  return t_rnd_;
}
void MsgAuthentication::set_t_rnd(::google::protobuf::int32 value) {
  
  t_rnd_ = value;
  // @@protoc_insertion_point(field_set:MsgAuthentication.t_rnd)
}

// optional int32 kicc = 5;
void MsgAuthentication::clear_kicc() {
  kicc_ = 0;
}
::google::protobuf::int32 MsgAuthentication::kicc() const {
  // @@protoc_insertion_point(field_get:MsgAuthentication.kicc)
  return kicc_;
}
void MsgAuthentication::set_kicc(::google::protobuf::int32 value) {
  
  kicc_ = value;
  // @@protoc_insertion_point(field_set:MsgAuthentication.kicc)
}

// optional int32 kifd = 6;
void MsgAuthentication::clear_kifd() {
  kifd_ = 0;
}
::google::protobuf::int32 MsgAuthentication::kifd() const {
  // @@protoc_insertion_point(field_get:MsgAuthentication.kifd)
  return kifd_;
}
void MsgAuthentication::set_kifd(::google::protobuf::int32 value) {
  
  kifd_ = value;
  // @@protoc_insertion_point(field_set:MsgAuthentication.kifd)
}

// optional int32 sk = 7;
void MsgAuthentication::clear_sk() {
  sk_ = 0;
}
::google::protobuf::int32 MsgAuthentication::sk() const {
  // @@protoc_insertion_point(field_get:MsgAuthentication.sk)
  return sk_;
}
void MsgAuthentication::set_sk(::google::protobuf::int32 value) {
  
  sk_ = value;
  // @@protoc_insertion_point(field_set:MsgAuthentication.sk)
}

// optional int32 ssc = 8;
void MsgAuthentication::clear_ssc() {
  ssc_ = 0;
}
::google::protobuf::int32 MsgAuthentication::ssc() const {
  // @@protoc_insertion_point(field_get:MsgAuthentication.ssc)
  return ssc_;
}
void MsgAuthentication::set_ssc(::google::protobuf::int32 value) {
  
  ssc_ = value;
  // @@protoc_insertion_point(field_set:MsgAuthentication.ssc)
}

inline const MsgAuthentication* MsgAuthentication::internal_default_instance() {
  return &MsgAuthentication_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgVehicleCtrlReq::kAcStatusFieldNumber;
const int MsgVehicleCtrlReq::kTrunkStatusFieldNumber;
const int MsgVehicleCtrlReq::kEngineStatusFieldNumber;
const int MsgVehicleCtrlReq::kDoorLockStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgVehicleCtrlReq::MsgVehicleCtrlReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ble_5fvck_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgVehicleCtrlReq)
}

void MsgVehicleCtrlReq::InitAsDefaultInstance() {
}

MsgVehicleCtrlReq::MsgVehicleCtrlReq(const MsgVehicleCtrlReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgVehicleCtrlReq)
}

void MsgVehicleCtrlReq::SharedCtor() {
  ::memset(&ac_status_, 0, reinterpret_cast<char*>(&door_lock_status_) -
    reinterpret_cast<char*>(&ac_status_) + sizeof(door_lock_status_));
  _cached_size_ = 0;
}

MsgVehicleCtrlReq::~MsgVehicleCtrlReq() {
  // @@protoc_insertion_point(destructor:MsgVehicleCtrlReq)
  SharedDtor();
}

void MsgVehicleCtrlReq::SharedDtor() {
}

void MsgVehicleCtrlReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgVehicleCtrlReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgVehicleCtrlReq_descriptor_;
}

const MsgVehicleCtrlReq& MsgVehicleCtrlReq::default_instance() {
  protobuf_InitDefaults_ble_5fvck_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MsgVehicleCtrlReq> MsgVehicleCtrlReq_default_instance_;

MsgVehicleCtrlReq* MsgVehicleCtrlReq::New(::google::protobuf::Arena* arena) const {
  MsgVehicleCtrlReq* n = new MsgVehicleCtrlReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgVehicleCtrlReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgVehicleCtrlReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MsgVehicleCtrlReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgVehicleCtrlReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ac_status_, door_lock_status_);

#undef ZR_HELPER_
#undef ZR_

}

bool MsgVehicleCtrlReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgVehicleCtrlReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .GenericState ac_status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ac_status(static_cast< ::GenericState >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_trunk_status;
        break;
      }

      // optional .GenericState trunk_status = 2;
      case 2: {
        if (tag == 16) {
         parse_trunk_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_trunk_status(static_cast< ::GenericState >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_engine_status;
        break;
      }

      // optional .GenericState engine_status = 3;
      case 3: {
        if (tag == 24) {
         parse_engine_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_engine_status(static_cast< ::GenericState >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_door_lock_status;
        break;
      }

      // optional .GenericState door_lock_status = 4;
      case 4: {
        if (tag == 32) {
         parse_door_lock_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_door_lock_status(static_cast< ::GenericState >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgVehicleCtrlReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgVehicleCtrlReq)
  return false;
#undef DO_
}

void MsgVehicleCtrlReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgVehicleCtrlReq)
  // optional .GenericState ac_status = 1;
  if (this->ac_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ac_status(), output);
  }

  // optional .GenericState trunk_status = 2;
  if (this->trunk_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->trunk_status(), output);
  }

  // optional .GenericState engine_status = 3;
  if (this->engine_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->engine_status(), output);
  }

  // optional .GenericState door_lock_status = 4;
  if (this->door_lock_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->door_lock_status(), output);
  }

  // @@protoc_insertion_point(serialize_end:MsgVehicleCtrlReq)
}

::google::protobuf::uint8* MsgVehicleCtrlReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgVehicleCtrlReq)
  // optional .GenericState ac_status = 1;
  if (this->ac_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ac_status(), target);
  }

  // optional .GenericState trunk_status = 2;
  if (this->trunk_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->trunk_status(), target);
  }

  // optional .GenericState engine_status = 3;
  if (this->engine_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->engine_status(), target);
  }

  // optional .GenericState door_lock_status = 4;
  if (this->door_lock_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->door_lock_status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MsgVehicleCtrlReq)
  return target;
}

size_t MsgVehicleCtrlReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgVehicleCtrlReq)
  size_t total_size = 0;

  // optional .GenericState ac_status = 1;
  if (this->ac_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ac_status());
  }

  // optional .GenericState trunk_status = 2;
  if (this->trunk_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->trunk_status());
  }

  // optional .GenericState engine_status = 3;
  if (this->engine_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->engine_status());
  }

  // optional .GenericState door_lock_status = 4;
  if (this->door_lock_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->door_lock_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgVehicleCtrlReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgVehicleCtrlReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgVehicleCtrlReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgVehicleCtrlReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgVehicleCtrlReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgVehicleCtrlReq)
    UnsafeMergeFrom(*source);
  }
}

void MsgVehicleCtrlReq::MergeFrom(const MsgVehicleCtrlReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgVehicleCtrlReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MsgVehicleCtrlReq::UnsafeMergeFrom(const MsgVehicleCtrlReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.ac_status() != 0) {
    set_ac_status(from.ac_status());
  }
  if (from.trunk_status() != 0) {
    set_trunk_status(from.trunk_status());
  }
  if (from.engine_status() != 0) {
    set_engine_status(from.engine_status());
  }
  if (from.door_lock_status() != 0) {
    set_door_lock_status(from.door_lock_status());
  }
}

void MsgVehicleCtrlReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgVehicleCtrlReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgVehicleCtrlReq::CopyFrom(const MsgVehicleCtrlReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgVehicleCtrlReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MsgVehicleCtrlReq::IsInitialized() const {

  return true;
}

void MsgVehicleCtrlReq::Swap(MsgVehicleCtrlReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgVehicleCtrlReq::InternalSwap(MsgVehicleCtrlReq* other) {
  std::swap(ac_status_, other->ac_status_);
  std::swap(trunk_status_, other->trunk_status_);
  std::swap(engine_status_, other->engine_status_);
  std::swap(door_lock_status_, other->door_lock_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgVehicleCtrlReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgVehicleCtrlReq_descriptor_;
  metadata.reflection = MsgVehicleCtrlReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgVehicleCtrlReq

// optional .GenericState ac_status = 1;
void MsgVehicleCtrlReq::clear_ac_status() {
  ac_status_ = 0;
}
::GenericState MsgVehicleCtrlReq::ac_status() const {
  // @@protoc_insertion_point(field_get:MsgVehicleCtrlReq.ac_status)
  return static_cast< ::GenericState >(ac_status_);
}
void MsgVehicleCtrlReq::set_ac_status(::GenericState value) {
  
  ac_status_ = value;
  // @@protoc_insertion_point(field_set:MsgVehicleCtrlReq.ac_status)
}

// optional .GenericState trunk_status = 2;
void MsgVehicleCtrlReq::clear_trunk_status() {
  trunk_status_ = 0;
}
::GenericState MsgVehicleCtrlReq::trunk_status() const {
  // @@protoc_insertion_point(field_get:MsgVehicleCtrlReq.trunk_status)
  return static_cast< ::GenericState >(trunk_status_);
}
void MsgVehicleCtrlReq::set_trunk_status(::GenericState value) {
  
  trunk_status_ = value;
  // @@protoc_insertion_point(field_set:MsgVehicleCtrlReq.trunk_status)
}

// optional .GenericState engine_status = 3;
void MsgVehicleCtrlReq::clear_engine_status() {
  engine_status_ = 0;
}
::GenericState MsgVehicleCtrlReq::engine_status() const {
  // @@protoc_insertion_point(field_get:MsgVehicleCtrlReq.engine_status)
  return static_cast< ::GenericState >(engine_status_);
}
void MsgVehicleCtrlReq::set_engine_status(::GenericState value) {
  
  engine_status_ = value;
  // @@protoc_insertion_point(field_set:MsgVehicleCtrlReq.engine_status)
}

// optional .GenericState door_lock_status = 4;
void MsgVehicleCtrlReq::clear_door_lock_status() {
  door_lock_status_ = 0;
}
::GenericState MsgVehicleCtrlReq::door_lock_status() const {
  // @@protoc_insertion_point(field_get:MsgVehicleCtrlReq.door_lock_status)
  return static_cast< ::GenericState >(door_lock_status_);
}
void MsgVehicleCtrlReq::set_door_lock_status(::GenericState value) {
  
  door_lock_status_ = value;
  // @@protoc_insertion_point(field_set:MsgVehicleCtrlReq.door_lock_status)
}

inline const MsgVehicleCtrlReq* MsgVehicleCtrlReq::internal_default_instance() {
  return &MsgVehicleCtrlReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
